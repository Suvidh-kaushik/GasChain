// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Customer{
  id String @unique @default(uuid())
  firstName String
  lastName String
  wallet String @unique 
  ipfsHash String
  kyc_requests KYC_Request[]
  cgp_requests CGP_Request[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 }

model Admin{
  id String @unique @default(uuid())
  firstName String
  lastName String
  company String @unique
  wallet String @unique
  kyc_requests KYC_Request[]
  cgp_requests CGP_Request[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model KYC_Request{
  id String @unique @default(uuid())
  status STATUS @default(PENDING)
  reason String?
  customerId String
  customer Customer @relation(fields:[customerId],references: [id])
  adminId String
  admin Admin @relation(fields: [adminId],references: [id])
  ipfsHash String
  contractAddr String?
  cgp_request CGP_Request[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model CGP_Request{  //change gas provider request
  id String @unique @default(uuid())
  status STATUS @default(PENDING)
  customerId String
  customer Customer @relation(fields:[customerId],references: [id])
  oldGasCompany String
  new_adminId String
  new_admin Admin @relation(fields: [new_adminId],references: [id])
  approved_KYC_id String?
  approved_KYC KYC_Request? @relation(fields:[approved_KYC_id],references: [id])
}

enum STATUS{
  APPROVED
  PENDING
  REJECTED
}